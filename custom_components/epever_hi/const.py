import logging

from homeassistant.helpers.entity import EntityCategory

DOMAIN = "epever_hi"
CONF_SLAVE = "slave"
CONF_CONNECTION_TYPE = "connection_type"
CONF_REGISTER_TYPE = "register_type"

LOGGER = logging.getLogger(__package__)

# EPEVER Hi Solar Charge Controller Register Definitions
# Based on EPEVER Hi Modbus Protocol Documentation

SENSOR_DEFINITIONS_NEW = {
    # Grid/Utility sensors
    0x3500: {
        "key": "grid_voltage",
        "name": "Grid Voltage",
        "unit": "V",
        "scale": 0.01,
        "precision": 2,
        "device_class": "voltage",
        "readable": True,
        "register_type": "input",  # Input registers (function code 0x04)
    },
    0x3501: {
        "key": "grid_current",
        "name": "Grid Current",
        "unit": "A",
        "scale": 0.01,
        "precision": 2,
        "device_class": "current",
        "readable": True,
        "register_type": "input",  # Input registers (function code 0x04)
    },
    0x3511: {
        "key": "grid_state",
        "name": "Grid State",
        "unit": "",
        "scale": 1,
        "precision": 0,
        "readable": True,
        "register_type": "input",
    },
    0x350F: {
        "key": "grid_total",
        "name": "Grid Total",
        "unit": "kWh",
        "scale": 0.01,
        "precision": 2,
        "device_class": "energy",
        "data_type": "int32",
        "swap": "word",
        "readable": True,
        "register_type": "input",
    },
    # PV Array sensors
    0x3549: {
        "key": "pv_voltage",
        "name": "PV Voltage",
        "unit": "V",
        "scale": 0.01,
        "precision": 2,
        "device_class": "voltage",
        "readable": True,
        "register_type": "input",
    },
    0x354A: {
        "key": "pv_current",
        "name": "PV Current",
        "unit": "A",
        "scale": 0.01,
        "precision": 2,
        "device_class": "current",
        "readable": True,
        "register_type": "input",
    },
    0x354B: {
        "key": "pv_power",
        "name": "PV Power",
        "unit": "W",
        "scale": 0.01,
        "precision": 2,
        "device_class": "power",
        "data_type": "int32",
        "swap": "word",
        "readable": True,
        "register_type": "input",
    },
    0x3557: {
        "key": "pv_total",
        "name": "PV Total",
        "unit": "kWh",
        "scale": 0.01,
        "precision": 2,
        "device_class": "energy",
        "data_type": "int32",
        "swap": "word",
        "readable": True,
        "register_type": "input",
    },
    # Load sensors
    0x3521: {
        "key": "load_voltage",
        "name": "Load Voltage",
        "unit": "V",
        "scale": 0.01,
        "precision": 2,
        "device_class": "voltage",
        "readable": True,
        "register_type": "input",
    },
    0x3522: {
        "key": "load_current",
        "name": "Load Current",
        "unit": "A",
        "scale": 0.01,
        "precision": 2,
        "device_class": "current",
        "readable": True,
        "register_type": "input",
    },
    0x3530: {
        "key": "load_total",
        "name": "Load Total",
        "unit": "kWh",
        "scale": 0.01,
        "precision": 2,
        "device_class": "energy",
        "data_type": "int32",
        "swap": "word",
        "readable": True,
        "register_type": "input",
    },
    # Battery sensors
    0x3580: {
        "key": "battery_voltage",
        "name": "Battery Voltage",
        "unit": "V",
        "scale": 0.01,
        "precision": 2,
        "device_class": "voltage",
        "readable": True,
        "register_type": "input",
    },
    0x3581: {
        "key": "battery_current",
        "name": "Battery Current",
        "unit": "A",
        "scale": 0.01,
        "precision": 2,
        "device_class": "current",
        "readable": True,
        "register_type": "input",
    },
    0x3586: {
        "key": "battery_capacity",
        "name": "Battery Capacity",
        "unit": "%",
        "scale": 1,
        "precision": 0,
        "device_class": "battery",
        "readable": True,
        "register_type": "input",
    },
    0x3512: {
        "key": "battery_temp",
        "name": "Battery Temp",
        "unit": "°C",
        "scale": 0.01,
        "precision": 2,
        "device_class": "temperature",
        "readable": True,
        "register_type": "input",
    },
    0x3589: {
        "key": "battery_state",
        "name": "Battery State",
        "unit": "",
        "scale": 1,
        "precision": 0,
        "readable": True,
        "register_type": "input",
    },
    0x3533: {
        "key": "inverter_temp",
        "name": "Inverter Temp",
        "unit": "°C",
        "scale": 0.01,
        "precision": 2,
        "device_class": "temperature",
        "readable": True,
        "register_type": "input",
    },
}


REGISTER_DEFINITIONS = {
    # Battery Settings
    0x9000: {
        "key": "battery_type",
        "name": "Battery Type",
        "unit": "",
        "scale": 1,
        "precision": 0,
        "min": 1,
        "max": 7,
        "readable": True,
        "writable": True,
        "register_type": "holding",
    },
    0x9001: {
        "key": "battery_capacity",
        "name": "Battery Capacity",
        "unit": "Ah",
        "scale": 1,
        "precision": 0,
        "min": 1,
        "max": 1000,
        "readable": True,
        "writable": True,
        "register_type": "holding",
    },
    0x9002: {
        "key": "temperature_compensation_coeff",
        "name": "Temperature Compensation Coefficient",
        "unit": "mV/°C/2V",
        "scale": 1,
        "precision": 0,
        "min": 0,
        "max": 9,
        "readable": True,
        "writable": True,
    },
    0x9003: {
        "key": "high_volt_disconnect",
        "name": "High Voltage Disconnect",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x9004: {
        "key": "charging_limit_voltage",
        "name": "Charging Limit Voltage",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x9005: {
        "key": "over_voltage_reconnect",
        "name": "Over Voltage Reconnect",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x9006: {
        "key": "equalization_voltage",
        "name": "Equalization Voltage",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x9007: {
        "key": "boost_voltage",
        "name": "Boost Voltage",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x9008: {
        "key": "float_voltage",
        "name": "Float Voltage",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x9009: {
        "key": "boost_reconnect_voltage",
        "name": "Boost Reconnect Voltage",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x900A: {
        "key": "low_voltage_reconnect",
        "name": "Low Voltage Reconnect",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x900B: {
        "key": "under_voltage_recover",
        "name": "Under Voltage Recover",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x900C: {
        "key": "under_voltage_warning",
        "name": "Under Voltage Warning",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x900D: {
        "key": "low_voltage_disconnect",
        "name": "Low Voltage Disconnect",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    0x900E: {
        "key": "discharging_limit_voltage",
        "name": "Discharging Limit Voltage",
        "unit": "V",
        "device_class": "voltage",
        "scale": 0.01,
        "precision": 2,
        "min": 9,
        "max": 17,
        "readable": True,
        "writable": True,
    },
    # Control registers - holding registers
    0x9607: {
        "key": "charging_mode",
        "name": "Charging Mode",
        "unit": "",
        "scale": 1,
        "precision": 0,
        "min": 0,
        "max": 10,
        "readable": True,
        "writable": True,
        "register_type": "holding",
    },
    0x9608: {
        "key": "inverter_mode",
        "name": "Inverter Mode",
        "unit": "",
        "scale": 1,
        "precision": 0,
        "min": 0,
        "max": 10,
        "readable": True,
        "writable": True,
        "register_type": "holding",
    },
}

SWITCH_DEFINITIONS = {
    0x0002: {
        "key": "manual_control_load",
        "name": "Manual Control Load",
        "unit": "",
        "device_class": "switch",
        "readable": True,
        "writable": True,
        "entity_type": "switch",
        "register_type": "holding",
    },
    0x0005: {
        "key": "enable_load_test",
        "name": "Enable Load Test",
        "unit": "",
        "device_class": "switch",
        "readable": True,
        "writable": True,
        "entity_type": "switch",
    },
}

BUTTON_DEFINITIONS = {
    0x0001: {
        "key": "reset_charging_parameters",
        "name": "Reset Charging Parameters",
        "unit": "",
        "device_class": "restart",
        "readable": True,
        "writable": True,
        "entity_type": "button",
        "register_type": "holding",
    },
    0x0003: {
        "key": "force_load_on",
        "name": "Force Load On",
        "unit": "",
        "device_class": "restart",
        "readable": True,
        "writable": True,
        "entity_type": "button",
    },
    0x0004: {
        "key": "force_load_off",
        "name": "Force Load Off",
        "unit": "",
        "device_class": "restart",
        "readable": True,
        "writable": True,
        "entity_type": "button",
    },
}

# Number definitions, generated from REGISTER_DEFINITIONS
NUMBER_DEFINITIONS = [
    {
        "address": addr,
        "key": reg["key"],
        "name": reg["name"],
        "min": reg.get("min", 0),
        "max": reg.get("max", 0),
        "unit": reg.get("unit", ""),
        "scale": reg.get("scale", 1),
        "precision": reg.get("precision", 0),
        "register_type": reg.get("register_type", "holding"),
        "unique_id": f"epever_hi_number_{reg['key']}",
    }
    for addr, reg in REGISTER_DEFINITIONS.items()
    if reg.get("writable")
]

# Select definitions for EPEVER Hi
SELECT_DEFINITIONS = {
    0x9000: {
        "key": "battery_type",
        "name": "Battery Type",
        "type": "uns16",
        "dataLength": 1,
        "readable": True,
        "writable": True,
        "register_type": "holding",
        "options": {
            1: "User Defined",
            2: "Sealed",
            3: "GEL",
            4: "Flooded",
            5: "LiFePO4",
            6: "LiTernary",
            7: "LiTi",
        },
    },
}

# Diagnostic definitions for binary sensors
DIAGNOSTIC_DEFINITIONS = {
    0x3200: {
        "type": "uint16",
        "entity_category": EntityCategory.DIAGNOSTIC,
        "register_type": "input",
        "bits": {
            0: {"key": "charging", "name": "Charging"},
            1: {"key": "charging_mppt", "name": "Charging MPPT"},
            2: {"key": "charging_equalizing", "name": "Charging Equalizing"},
            3: {"key": "charging_boost", "name": "Charging Boost"},
            4: {"key": "charging_float", "name": "Charging Float"},
            5: {
                "key": "charging_current_limiting",
                "name": "Charging Current Limiting",
            },
        },
    },
    0x3201: {
        "type": "uint16",
        "entity_category": EntityCategory.DIAGNOSTIC,
        "register_type": "input",
        "bits": {
            0: {"key": "load_on", "name": "Load On"},
            1: {"key": "load_short_circuit", "name": "Load Short Circuit"},
            2: {"key": "load_overload", "name": "Load Overload"},
            3: {"key": "load_over_discharge", "name": "Load Over Discharge"},
            4: {"key": "input_over_current", "name": "Input Over Current"},
            5: {"key": "load_over_current", "name": "Load Over Current"},
            6: {"key": "battery_over_discharge", "name": "Battery Over Discharge"},
            7: {"key": "battery_over_voltage", "name": "Battery Over Voltage"},
            8: {
                "key": "battery_under_voltage_warning",
                "name": "Battery Under Voltage Warning",
            },
        },
    },
}

FIRMWARE_INFO = {
    0x9013: {
        "key": "device_serial_number",
        "name": "Serial Number",
        "unit": "",
        "scale": 1,
        "precision": 0,
        "type": "char",
        "dataLength": 8,
        "readable": True,
        "writable": False,
    },
    0x900C: {
        "key": "controller_model",
        "name": "Controller Model",
        "unit": "",
        "scale": 1,
        "precision": 0,
        "type": "uns16",
        "dataLength": 2,
        "readable": True,
        "writable": False,
    },
    0x9014: {
        "key": "firmware_version",
        "name": "Firmware Version",
        "unit": "",
        "scale": 1,
        "precision": 0,
        "type": "uns16",
        "dataLength": 2,
        "readable": True,
        "writable": False,
    },
}


def get_device_info(entry_id: str):
    return {
        "identifiers": {(DOMAIN, entry_id)},
        "name": "EPEVER Hi Solar Charge Controller",
        "manufacturer": "EPEVER",
        "model": "Hi Series",
    }
